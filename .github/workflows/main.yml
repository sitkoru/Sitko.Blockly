name: Main

on:
  push:
    branches:
      - "*"
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    container: ghcr.io/sitkoru/actions-container
    env:
      PROJECT: Sitko.Blockly
      BLAZOR_PROJECT: Sitko.Blockly.Blazor
      ANTDESIGN_PROJECT: Sitko.Blockly.AntDesign
      MUDBLAZOR_PROJECT: Sitko.Blockly.AntDesign
      EF_PROJECT: Sitko.Blockly.EntityFrameworkCore
      TESTS_PROJECT_MAIN: Sitko.Blockly.Tests
      TESTS_PROJECT_PARSER: Sitko.Blockly.HtmlParser.Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Install node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: |
            src/Sitko.Blockly.Blazor/Web/package.json
      - name: Build blazor js
        working-directory: src/${{ env.BLAZOR_PROJECT }}/Web
        shell: bash
        run: |
          npm ci
          npm run prod
      - name: Create main package
        run: dotnet pack -c Release src/${{ env.PROJECT }}
      - name: Create blazor package
        run: dotnet pack -c Release src/${{ env.BLAZOR_PROJECT }}
      - name: Create antdesign package
        run: dotnet pack -c Release src/${{ env.ANTDESIGN_PROJECT }}
      - name: Create mudblazor package
        run: dotnet pack -c Release src/${{ env.MUDBLAZOR_PROJECT }}
      - name: Create ef package
        run: dotnet pack -c Release src/${{ env.EF_PROJECT }}
      - name: Run main tests
        run: dotnet test --logger GitHubActions tests/${{ env.TESTS_PROJECT_MAIN }}/${{ env.TESTS_PROJECT_MAIN }}.csproj
      - name: Run html parser tests
        run: dotnet test --logger GitHubActions tests/${{ env.TESTS_PROJECT_PARSER }}/${{ env.TESTS_PROJECT_PARSER }}.csproj

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ build ]
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Semantic Release
        uses: sitkoru/semantic-release-action@v1
        env:
          GH_TOKEN: ${{ secrets.BOT_TOKEN }}
          GIT_AUTHOR_NAME: ${{ secrets.BOT_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.BOT_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.BOT_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.BOT_EMAIL }}
