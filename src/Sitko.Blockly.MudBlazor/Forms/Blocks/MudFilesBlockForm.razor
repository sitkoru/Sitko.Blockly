@using Sitko.Core.Storage
@using Sitko.Core.App.Collections
@inherits FilesBlockForm<MudBlazorBlocklyFormOptions>
@if (FormOptions.Storage is not null)
{
    <MudItem>
        <MudFilesUpload
            TValue="ValueCollection<StorageItem>"
            Storage="FormOptions.Storage"
            ContentTypes="@FormOptions.ImagesOptions.AllowedTypes"
            UploadPath="@FormOptions.ImagesOptions.UploadPath"
            MaxFileSize="@FormOptions.ImagesOptions.MaxFileSize"
            MaxAllowedFiles="@FormOptions.ImagesOptions.MaxAllowedFiles"
            GenerateMetadata="FormOptions.ImagesOptions.GenerateMetadata"
            UploadText="@LocalizationProvider["Upload"]"
            RemoveText="@LocalizationProvider["Remove"]"
            LeftText="@LocalizationProvider["Move left"]"
            RightText="@LocalizationProvider["Move right"]"
            @bind-Value="Block.Files"/>
        <MudBlockValidationMessage BlockForm="this"></MudBlockValidationMessage>
    </MudItem>
}
else
{
    <MudBlockFormErrorComponent Error="@LocalizationProvider["Storage is not configured in form options"]"></MudBlockFormErrorComponent>
}
