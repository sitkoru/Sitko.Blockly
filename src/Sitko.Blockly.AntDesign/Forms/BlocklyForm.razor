@using global::AntDesign
@typeparam TEntity
@typeparam TForm
@inherits BlocklyFormBase<TEntity, TForm>

<div id="blocks-@Entity.GetHashCode()">
    @foreach (var block in Blocks)
    {
        var blockDescriptor = @Blockly.GetBlockDescriptor(block.GetType());
        var className = $"block-form block-{block.GetType().Name.ToLowerInvariant()}";
        <div class="block-row" @key="block.Id">
            <div class="block-icon">
                @blockDescriptor.Icon
            </div>
            <div class="block-content">
                <AntDesign.Dropdown Class="add-block add-block-top" Trigger="@(new[] {TriggerType.Click})">
                    <Overlay>
                        <AntDesign.Menu>
                            @foreach (var descriptor in BlockDescriptors)
                            {
                                <AntDesign.MenuItem OnClick="@(() => AddBlock(descriptor.Type, block, false))">
                                    @descriptor.Icon @descriptor.Title
                                </AntDesign.MenuItem>
                            }
                        </AntDesign.Menu>
                    </Overlay>
                    <ChildContent>
                        <Button Size="small" Shape="circle">
                            <Icon Type="plus"></Icon>
                        </Button>
                    </ChildContent>
                </AntDesign.Dropdown>
                <AntDesign.Card Class="@className">
                    <Body>
                    @blockDescriptor.RenderBlockForm(block)
                    </Body>
                </AntDesign.Card>
                <AntDesign.Dropdown Class="add-block add-block-bottom" Trigger="@(new[] {TriggerType.Click})">
                    <Overlay>
                        <AntDesign.Menu>
                            @foreach (var descriptor in BlockDescriptors)
                            {
                                <AntDesign.MenuItem OnClick="@(() => AddBlock(descriptor.Type, block))">
                                    @descriptor.Icon @descriptor.Title
                                </AntDesign.MenuItem>
                            }
                        </AntDesign.Menu>
                    </Overlay>
                    <ChildContent>
                        <Button Size="small" Shape="circle">
                            <Icon Type="plus"></Icon>
                        </Button>
                    </ChildContent>
                </AntDesign.Dropdown>
            </div>
            <div class="block-controls">
                <AntDesign.Button Size="small" Disabled="!CanMoveBlockUp(block)" OnClick="@(() => MoveBlockUp(block))">
                    <Icon Type="up"></Icon>
                </AntDesign.Button>
                <AntDesign.Popconfirm Placement="@PlacementType.Left" Title="Вы действительно хотите удалить это блок?"
                                      OnConfirm="@(() => DeleteBlock(block))"
                                      OkText="Удалить"
                                      CancelText="Нет">
                    <AntDesign.Button Size="small">
                        <Icon Type="delete"></Icon>
                    </AntDesign.Button>
                </AntDesign.Popconfirm>
                <AntDesign.Button Size="small" Disabled="!CanMoveBlockDown(block)" OnClick="@(() => MoveBlockDown(block))">
                    <Icon Type="down"></Icon>
                </AntDesign.Button>
            </div>
        </div>
    }
</div>
