@page "/"
@using Sitko.Blockly.Demo.Data.Entities
@using Sitko.Blockly.Demo.Data.Repositories
@using Sitko.Blockly.Display
@using Sitko.Core.Storage
@inherits BaseComponent
<MudPageLayout Title="@LocalizationProvider["Posts"]">
    <Extra>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" Link="/Posts/Add">Add</MudButton>
    </Extra>
    <ChildContent>
        @foreach (var post in Posts)
                {
                    <MudCard>
                        <MudCardHeader>
                            <MudText Typo="Typo.h6">@post.Title</MudText>
                        </MudCardHeader>
                        <MudCardActions>
                            <MudButton Link="@($"/Posts/{post.Id}/Edit")" Variant="Variant.Text" Color="Color.Primary">Edit</MudButton>
                        </MudCardActions>
                        <MudCardContent>
                            <MudBlocksList
                                                            EntityBlocks="post.Blocks" Options="@(new MudBlazorBlocklyListOptions(BlocksListMode.Preview, GetService<IStorage<BlocklyStorageOptions>>(), $"Posts/{post.Id}"))">
                                                        </MudBlocksList>
                        </MudCardContent>
                    </MudCard>
                }
    </ChildContent>
</MudPageLayout>

@code{

    protected override async Task InitializeAsync()
    {
        await base.InitializeAsync();
        var posts = await GetRequiredService<PostsRepository>().GetAllAsync();
        Posts = posts.items;
    }

    private Post[] Posts { get; set; } = Array.Empty<Post>();

}
