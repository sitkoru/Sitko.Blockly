@inject IJSRuntime JSRuntime
<MudAppBar>
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => ToggleDrawer())"/>
    My Application
</MudAppBar>
<MudDrawer Class="mud-drawer-fixed" Open=_isDrawerOpen>
    <NavMenu />
</MudDrawer>

@code {
    private bool _isDrawerOpen = true;
    private bool _shouldHandleDrawerToggled = false;
    private IJSObjectReference? _jsModule;

    void ToggleDrawer()
    {
        _isDrawerOpen = !_isDrawerOpen;
        _shouldHandleDrawerToggled = true;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _jsModule = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./Layout/MainAppDrawerBar.razor.js");
        }
        if (_shouldHandleDrawerToggled)
        {
            await _jsModule!.InvokeVoidAsync("HandleDrawerToggled", _isDrawerOpen);
            _shouldHandleDrawerToggled = false;
        }
    }

}
